<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <!-- <script src="https://cdn.tailwindcss.com"></script> -->

    <!-- <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css"> -->
    <!-- owl carousel -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css">
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.theme.default.min.css">

    <script src="https://kit.fontawesome.com/64af63ddf7.js" crossorigin="anonymous"></script>
    <!-- jquery plugin -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.min.js" 
    integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>

    <link rel="stylesheet" href="/public/css/output.css">
    <link rel="stylesheet" href="/public/css/styles.css">
    <title>Drip Kustom</title>
</head>

<body>
    <header class="py-5 sm:px-10 lg:px-20">
        <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-0">
            <nav class="relative z-50 flex justify-between items-center">
                <div class="flex items-center md:gap-x-24">
                    <a aria-label="Home" href="/" class="font-bold">
                        DRIP-KUSTOM
                    </a>
                    <div class="hidden md:flex md:gap-x-6" >
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/">
                            Home
                        </a>
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/collections">
                            Collections
                        </a>
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/about">
                            About
                        </a>
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/store-policy">
                            Store Policy
                        </a>
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/faqs">
                            Faqs
                        </a>
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/contact">
                            Contact
                        </a>
                    </div>
                    <div class="mobileMenu gap-6 lg:gap-0 hidden md:gap-x-6 flex-col flex" id="mobileMenu">
                        <button id="closeBtn" class="close-btn mt-3">Ã—</button>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/">
                            Home
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/collections">
                            Collections
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/about">
                            About
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/store-policy">
                            Store Policy
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/faqs">
                            Faqs
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/contact">
                            Contact
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 font-semibold text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900 bg-blue-500 text-white" id="loginButton">
                            <button class="" >
                                Login
                            </button>
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 font-semibold text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900 bg-blue-500 text-white" id="signupButton">
                            <button class="" >
                                Sign-up
                            </button>
                        </a>
                        
                    </div>
                </div>
                <div class="flex items-center gap-x-5 md:gap-x-8">
                    <div class="hidden md:block">
                        <button class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900"  id="desktopLoginButton">
                            Login
                        </button>
                        <button class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900"  id="desktopSignupButton">
                            Sign up
                        </button>
                    </div>
                    <div class="" style="cursor: pointer;">
                        <i class="fa-solid fa-cart-shopping fa-xl" id="cart"></i>
                    </div>
                    <div class="-mr-1 md:hidden" id="hamburgerButton">
                        <div data-headlessui-state="">
                            <button class="relative z-10 flex h-8 w-8 items-center justify-center ui-not-focus-visible:outline-none" aria-label="Toggle Navigation" type="button" aria-expanded="false" data-headlessui-state="" id="headlessui-popover-button-:ri:">
                                <svg aria-hidden="true"class="h-3.5 w-3.5 overflow-visible stroke-slate-700" fill="none" stroke-width="2" stroke-linecap="round"> <path d="M0 1H14M0 7H14M0 13H14" class="origin-center transition"></path> <path d="M2 2L12 12M12 2L2 12" class="origin-center transition scale-90 opacity-0"> </path>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <div id="loginModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white p-8 md:px-10 rounded-md relative">
            <button id="closeLoginModal" class="absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>

          <form>
            <label for="loginUsername" class="block mb-2">Username:</label>
            <input type="text" id="loginUsername" name="loginUsername" class="block w-full border rounded-md mb-4 p-2">
      
            <label for="loginPassword" class="block mb-2">Password:</label>
            <input type="password" id="loginPassword" name="loginPassword" class="block w-full border rounded-md mb-4 p-2">
      
            <button type="submit" class="bg-blue-500 text-white py-2 px-4 rounded-md">Login</button>
            <!-- <button  class="bg-blue-500 text-white py-2 px-4 rounded-md" id="signup-modal">Sign up</button> -->
          </form>
          <button  class="underline py-2 px-4 rounded-md" id="signup-modal">Dont have an account? Sign up</button>
        </div>
    </div>
    <div id="signupModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white p-8 md:px-10 rounded-md relative">
          <button id="closeSignupModal" class="absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-700">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>

          <form class="w-[100%] md:w-80">
            <label for="signupUsername" class="block mb-2">Username:</label>
            <input type="text" id="signupUsername" name="signupUsername" class="block w-full border rounded-md mb-4 p-2">
      
            <label for="email" class="block mb-2">Email:</label>
            <input type="email" id="email" name="email" class="block w-full border rounded-md mb-4 p-2">
      
            <label for="signupPassword" class="block mb-2">Password:</label>
            <input type="password" id="signupPassword" name="signupPassword" class="block w-full border rounded-md mb-4 p-2">
      
            <button type="submit" class="bg-green-500 text-white py-2 px-4 rounded-md">Sign Up</button>
          </form>
          <button  class="underline py-2 px-4 rounded-md" id="login-modal">Already have an account? Sign in</button>
        </div>
    </div>
    <div id="cartModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white p-8 md:px-10 rounded-md relative lg:w-[50%]">
            <button id="closeCartModal" class="absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>

            <div id="cartReload">
                <h2 class="font-bold text-2xl">Your cart</h2>
                <% if (cartItems.length > 0) { %>
                    <% cartItems.forEach(function(cartItem) { %>
                        <div class="mb-4 flex lg:flex">
                            <div class="flex flex-col-reverse lg:flex-row lg:items-center w-[80%] lg:w-[40%]">
                                <div>
                                    
                                    <img class="h-20 w-[70%] sm:h-28 sm:w-[70%] md:w-[60%] lg:h-[90%] lg:w-[50%] rounded-md" src="<%= cartItem.image %>" alt="">
                                    <button class="remove-btn  text-red-700 font-semibold py-1 px-2 underline" data-shoe-id="<%= cartItem._id %>">Remove</button>
                                </div>
                               
                                <h2 class="mb-2 lg:mb-0 lg:ml-[10%] font-semibold text-sm lg:text-lg"><%= cartItem.name %></h2>
                            </div>
                            <div class="lg:w-[50%] w-[40%] flex flex-col justify-between my-3 sm:my-4 md:my-5 lg:my-0 lg:flex-row lg:items-center lg:justify-between lg:text-center lg:mx-5">
                                <span class="flex flex-row lg:flex-col">
                                    <p>size:</p>
                                    <p> 46</p>
                                </span>
                                <span class="flex flex-row">
                                    <button class="decrease-btn" data-shoe-id="<%= cartItem._id %>">-</button>
                                    <span class="quantity flex flex-row mx-2 md:mx-3 lg:mx-5" id="quantity_<%= cartItem._id %>"><%= cartItem.quantity %></span>
                                    <button class="increase-btn" data-shoe-id="<%= cartItem._id %>">+</button>
                                </span>
                                <span class="price" id="price_<%= cartItem._id %>">$<%= cartItem.price * cartItem.quantity %></span> 
                            </div>
                        </div>
                    <% }); %>
                    <a href="checkout" class="text-center bg-green-500 hover:bg-green-600 py-2 md:py-3 font-semibold text-white text-sm md:text-lg rounded-md md:rounded-lg"><button class="w-[100%] ">CHECKOUT</button></a>
                <% } else { %>
                <div class="flex justify-center">
                    <img class="bg-white" src="/public/images/cart.jpg" alt="cart image">
                </div>
                
                <p class="font-semibold text-center mb-10">Cart is empty</p>
                
                <a href="collections.html" class="rounded-md bg-gray-300 font-semibold text-sm px-3 py-2">
                    <button>Continue shopping</button>
                </a>
                <% } %>
            </div>

            <!-- <img class="bg-white" src="images/cart.jpg" alt=""> -->
        </div>
    </div>


    <script>
        const loginButton = document.getElementById('loginButton');
        const desktopLoginButton = document.getElementById('desktopLoginButton');
        const loginModal = document.getElementById('loginModal');
        const closeLoginModal = document.getElementById('closeLoginModal');
        const signupModalFromLoginModal = document.getElementById('signup-modal')
        const loginModalFromSignupModal = document.getElementById('login-modal')

        desktopLoginButton.addEventListener('click', () => {
            loginModal.classList.toggle('hidden');
        });
        loginButton.addEventListener('click', () => {
            loginModal.classList.toggle('hidden');
        });
        closeLoginModal.addEventListener('click', () => {
            loginModal.classList.add('hidden');
        });
        loginModal.addEventListener('click', (event) => {
            if (event.target === loginModal) {
                loginModal.classList.add('hidden');
            }
        });

        const signupButton = document.getElementById('signupButton');
        const desktopSignupButton = document.getElementById('desktopSignupButton');
        const signupModal = document.getElementById('signupModal');
        const closeSignupModal = document.getElementById('closeSignupModal');

        desktopSignupButton.addEventListener('click', () => {
            signupModal.classList.toggle('hidden');
        });
        signupButton.addEventListener('click', () => {
            signupModal.classList.toggle('hidden');
        });
        signupModalFromLoginModal.addEventListener('click', () => {
            signupModal.classList.toggle('hidden');
            loginModal.classList.add('hidden');
        });
        loginModalFromSignupModal.addEventListener('click', () => {
            signupModal.classList.add('hidden');
            loginModal.classList.toggle('hidden');
        });

        closeSignupModal.addEventListener('click', () => {
            signupModal.classList.add('hidden');
        });

        signupModal.addEventListener('click', (event) => {
            if (event.target === signupModal) {
                signupModal.classList.add('hidden');
            }
        });

        const cart = document.getElementById('cart');
        const cartModal = document.getElementById('cartModal');
        const closeCartModal = document.getElementById('closeCartModal');

        cart.addEventListener('click', () => {
            cartModal.classList.toggle('hidden');
        });

        closeCartModal.addEventListener('click', () => {
            cartModal.classList.add('hidden');
        });

        cartModal.addEventListener('click', (event) => {
            if (event.target === cartModal) {
                cartModal.classList.add('hidden');
            }
        });
        
        $(document).ready(function(){
            const hamburgerButton = document.getElementById('hamburgerButton');
            const mobileMenu = document.getElementById('mobileMenu');
            const closeBtn = document.getElementById('closeBtn');

            hamburgerButton.addEventListener('click', () => {
                alert("working")
                mobileMenu.classList.toggle("hidden");
            });
            closeBtn.addEventListener('click', () => {
                mobileMenu.classList.toggle("hidden");
            });

            $('.addToCartBtn').on('click', function(){
                const shoeId = $(this).data('shoe-id');
                addToCart(shoeId);
                $('#cartReload').load(location.href + ' #cartReload');
                // console.log("just reloaded"); localStorage.setItem("cartItems", cartItems);
            });
            function addToCart(shoeId){
                $.ajax({
                    url: '/add-to-cart',
                    method: 'POST',
                    data: { shoeId: shoeId },
                    success: function(response){
                        showNotification('Item added to cart!');
                        // console.log(response.message); 
                        // console.log(response.cartItems); 
                        // localStorage.setItem('cartItems', JSON.stringify(response.cartItems));
                        // console.log(localStorage.getItem('cartItems'));

                        // const storedCartItems = localStorage.getItem('cartItems');
                        // console.log(storedCartItems)

                        // Check if there are stored cart items
                        // if (storedCartItems) {
                            // Parse the stored string back into an array/object
                            // const cartItems = JSON.parse(storedCartItems);

                            // Now you can use cartItems in your application
                            // console.log(cartItems); // For example, log the cart items
                            // Use cartItems in your application logic...
                        // } else {
                            // console.log("nothing saved")
                            // Handle the case where no cart items are stored
                        // }
                    // },
                    // error: function(error){
                        // console.error('Error adding item to cart:', error);
                    }
                });
            }
            function showNotification(message) {
                const notification = document.getElementById('notification');
                notification.textContent = message;
                notification.classList.remove('hidden');
                setTimeout(() => {
                    notification.classList.add('hidden');
                }, 3000);
            }
 
            document.getElementById('cartModal').addEventListener('click', function(event) {
                const target = event.target;

                // Check if the clicked element is an increase or decrease button
                if (target.classList.contains('increase-btn')) {
                    const shoeId = target.dataset.shoeId;
                    const spanQuantity = document.getElementById(`quantity_${shoeId}`);
                    const currentQuantity = parseInt(spanQuantity.textContent);

                    // Increase quantity
                    spanQuantity.textContent = currentQuantity + 1;
                    updateQuantity(shoeId, currentQuantity + 1);
                } else if (target.classList.contains('decrease-btn')) {
                    const shoeId = target.dataset.shoeId;
                    const spanQuantity = document.getElementById(`quantity_${shoeId}`);
                    const currentQuantity = parseInt(spanQuantity.textContent);

                    // Decrease quantity only if it's greater than 1
                    if (currentQuantity > 1) {
                        spanQuantity.textContent = currentQuantity - 1;

                        updateQuantity(shoeId, currentQuantity - 1);
                    }
                } 
                $('#cartReload').load(location.href + ' #cartReload');
            });


            function updateQuantity(shoeId, newQuantity) {
    
                $.ajax({
                    url: '/update-quantity',
                    method: 'POST',
                    data: { shoeId: shoeId, quantity: newQuantity },
                    success: function(response) {
                        // Handle success if needed
                        // console.log(response);
                    },
                    error: function(error) {
                        // Handle error if needed
                        // console.error(error);
                    }
                });
            }

            // $(document).ready(function() {
            $('#cartReload').on('click', '.remove-btn', function() {
                const shoeId = $(this).data('shoe-id');
                // console.log(shoeId)
                removeFromCart(shoeId);
            });
            function removeFromCart(shoeId){
                console.log("inside remove from cart function ajax side");
                $.ajax({
                    url: '/remove-from-cart',
                    method: 'POST',
                    data: { shoeId: shoeId },
                    success: function(response) {
                        // console.log(response);
                        $('#cartReload').load(location.href + ' #cartReload');
                        console.log("just reloaded");
                    },
                    error: function(error) {
                        console.error('Error removing item:', error);
                    }
                });
            }
        });
        // });
            
        // });








        let slideIndex = 1;
        showSlides(slideIndex);

        // Next/previous controls
        function plusSlides(n) {
        showSlides(slideIndex += n);
        }

        // Thumbnail image controls
        function currentSlide(n) {
        showSlides(slideIndex = n);
        }

        function showSlides(n) {
        let i;
        let slides = document.getElementsByClassName("mySlides");
        let dots = document.getElementsByClassName("dot");
        if (n > slides.length) {slideIndex = 1}
        if (n < 1) {slideIndex = slides.length}
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex-1].style.display = "block";
        dots[slideIndex-1].className += " active";
        }

        // const hamburgerButton = document.getElementById('hamburgerButton');
        // const mobileMenu = document.getElementById('mobileMenu');
        // const closeBtn = document.getElementById('closeBtn');

        // hamburgerButton.addEventListener('click', () => {
        //     alert("working")
        //     mobileMenu.classList.toggle("hidden");
        // });
        // closeBtn.addEventListener('click', () => {
        //     mobileMenu.classList.toggle("hidden");
        // });

        $(document).ready(function(){
        $('.owl-carousel').owlCarousel({
            loop:true,
            margin:10,
            autoplay: true,
            autoplayTimeout:2000,
            autoplayHoverPause: true,
            responsive:{
                0:{
                    items:1,stagePadding: 50,
                },
                500:{
                    items:2
                },
                1000:{
                    items:3
                }
            }
        })
        });

        const filter = document.getElementById("filter");
        const filterMenu = document.getElementById("filter-menu");

        const sortBy = document.getElementById("sort-by");
        const sortByMenu = document.getElementById("sort-menu");

        filter.addEventListener('click', () => {
            // alert("working");
            filterMenu.classList.toggle("hidden");
        });
        sortBy.addEventListener('click', () => {
            // alert("working");
            sortByMenu.classList.toggle("hidden");
        });
    </script>