<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css"> -->
    <!-- owl carousel -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css">
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.theme.default.min.css">

    <script src="https://kit.fontawesome.com/64af63ddf7.js" crossorigin="anonymous"></script>
    <!-- jquery plugin -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.min.js" 
    integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous"></script>

    <link rel="stylesheet" href="/public/css/output.css">
    <link rel="stylesheet" href="/public/css/styles.css">
    <title>Drip Kustom</title>
</head>

<body class="pt-20">
    <header class="py-2 md:py-3 top-0 left-0 right-0 z-50 fixed w-full bg-white">
        <div class=" px-4 sm:px-6 lg:px-20 mx-auto max-w-full">
            <nav class="relative flex justify-between items-center font-medium">
                <div class="flex items-center md:gap-x-24">
                    <a aria-label="Home" href="/" class="font-bold">
                        <img width="200px" height="60px" src="/public/images/DRIPog.png" alt="">
                        <!-- DRIP-KUSTOM -->
                    </a>
                    <div class="hidden md:flex md:gap-x-6" >
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/">
                            Home
                        </a>
                        <!-- <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/collections">
                            Collections
                        </a> -->
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/about">
                            About
                        </a>
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/store-policy">
                            Store Policy
                        </a>
                        <a class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/faqs">
                            Faqs
                        </a>
                    </div>
                    <div class="mobileMenu gap-6 lg:gap-0 hidden md:gap-x-6 flex-col flex" id="mobileMenu">
                        <button id="closeBtn" class="close-btn mt-3">Ã—</button>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/">
                            Home
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/about">
                            About
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/store-policy">
                            Store Policy
                        </a>
                        <a class="inline-block rounded-lg px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" href="/faqs">
                            Faqs
                        </a>
                        <% if (isAuthenticated) { %>
                            <div class="relative inline-block">
                                <button id="myAccountBtn" class="px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900 focus:outline-none">
                                    My Account
                                </button>
                                <div id="accountSubMenu" class="hidden flex flex-col absolute top-full left-0 z-10 bg-white shadow-md rounded-lg border-2 mt-2">
                                    <a href="/profile/person" class="block px-4 py-2 text-sm text-gray-800 hover:bg-gray-100"><span>Personal Information</span></a>
                                    <a href="/profile/address" id="addressManagement" class="block px-4 py-2 text-sm text-gray-800 hover:bg-gray-100"><span>Address Management</span></a>
                                    <a href="/profile/order" class="block px-4 py-2 text-sm text-gray-800 hover:bg-gray-100"><span>My Order</span></a>
                                </div>
                            </div>

                            <a href="/auth/logout" class="px-6 py-1 text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900 focus:outline-none"><span>Logout</span></a>
                        <% } else { %>
                            <a class="inline-block rounded-lg px-6 py-1 font-semibold text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" id="loginButton">
                                <button class="" >
                                    Login
                                </button>
                            </a>
                            <a class="inline-block rounded-lg px-6 py-1 font-semibold text-sm text-slate-700 hover:bg-slate-100 hover:text-slate-900" id="signupButton">
                                <button class="" >
                                    Sign-up
                                </button>
                            </a>
                        <% } %>
                    </div>
                </div>
                <div class="flex items-center gap-x-5 md:gap-x-8">
                    <div class="hidden md:block">
                        <% if (isAuthenticated) { %>
                        <!-- Content for authenticated users -->
                        <a href="/profile/person" id="profileButton" title="Profile"><i class="fa-solid fa-user fa-xl"></i></a>
                        <% } else { %>
                        <button class="inline-block rounded-lg px-2 py-1 text-lg text-slate-700 hover:bg-slate-100 hover:text-slate-900"  id="desktopLoginButton">
                            Login
                        </button>
                        <% } %>
                    </div>
                    <div class="" style="cursor: pointer;">
                        <i class="fa-solid fa-cart-shopping fa-xl" id="cart"></i>
                    </div>
                    <div class="-mr-1 md:hidden" id="hamburgerButton">
                        <div data-headlessui-state="">
                            <button class="relative z-10 flex h-8 w-8 items-center justify-center ui-not-focus-visible:outline-none" aria-label="Toggle Navigation" type="button" aria-expanded="false" data-headlessui-state="" id="headlessui-popover-button-:ri:">
                                <svg aria-hidden="true"class="h-3.5 w-3.5 overflow-visible stroke-slate-700" fill="none" stroke-width="2" stroke-linecap="round"> <path d="M0 1H14M0 7H14M0 13H14" class="origin-center transition"></path> <path d="M2 2L12 12M12 2L2 12" class="origin-center transition scale-90 opacity-0"> </path>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <div id="loginModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white p-8 md:px-10 rounded-md relative" id="loginModalDiv">
            <button id="closeLoginModal" class="absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>

            <% if (!isAuthenticated) { %>             
                <% if (messages && messages.length > 0) { %>
                    <div class="error-message bg-red-100 border border-red-400 text-red-700 px-4 py-2 rounded">
                        <%= messages[0] %>
                    </div>
                <% } %>
            <% } %>
            <div id="loginSuccessMessage" ></div> 

            <form action="/auth/login" method="post" id="loginForm">
                <label for="loginEmail" class="block mb-2">Email:</label>
                <input type="text" id="loginEmail" name="loginEmail" class="block w-full border rounded-md mb-4 p-2" required>
        
                <label for="loginPassword" class="block mb-2">Password:</label>
                <div class="relative">
                    <input type="password" id="loginPassword" name="loginPassword" class="block w-full border rounded-md mb-4 p-2">
                    <button type="button" id="toggleLoginPassword" class="absolute top-0 right-0 px-2 py-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14" />
                        </svg>
                    </button>
                </div>
        
                <input type="hidden" name="source" value="normal">

                <div class="flex justify-between">
                    <button type="submit" id="loginSubmit" class="bg-blue-500 hover:bg-blue-600 focus:bg-blue-900 text-white py-2 px-4 rounded-md">Login</button>
                    <a href="/forgot-password" class="underline py-2 hover:text-red-400">Reset Password</a>
                </div>
            </form>
          <button  class="underline mt-2 py-1 px-2 hover:text-blue-400" id="signup-modal">Dont have an account? Sign up</button>
        </div>
    </div>
    <div id="signupModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white p-8 md:px-10 rounded-md relative" id="signupModalDiv">
            <button id="closeSignupModal" class="absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>

            <% if (!isAuthenticated) { %>             
                <% if (messages && messages.length > 0) { %>
                    <div class="error-message bg-red-100 border border-red-400 text-red-700 px-4 py-2 rounded">
                        <%= messages[0] %>
                    </div>
                <% } %>
            <% } %>
            <div id="signupSuccessMessage" ></div>

            <form class="w-[100%] md:w-80" action="/auth/signup" method="post" id="signupForm">
                <label for="signupUsername" class="block mb-2">Username:</label>
                <input type="text" id="signupUsername" name="signupUsername" class="block w-full border rounded-md mb-4 p-2">
        
                <label for="signupEmail" class="block mb-2">Email:</label>
                <input type="email" id="signupEmail" name="signupEmail" class="block w-full border rounded-md mb-4 p-2">
    
                <input type="hidden" name="source" value="normal">

                <label for="signupPassword" class="block mb-2">Password:</label>
                <div class="relative">
                    <input type="password" id="signupPassword" name="signupPassword" class="block w-full border rounded-md mb-4 p-2">
                    <button type="button" id="toggleSignupPassword" class="absolute top-0 right-0 px-2 py-2">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14" />
                        </svg>
                    </button>
                </div>
        
                <button type="submit" id="signupSubmit" class="bg-green-500 focus:bg-green-800 text-white py-2 px-4 rounded-md">Sign Up</button>
            </form>
            <button  class="underline py-1 px-2 hover:text-blue-400" id="login-modal">Already have an account? Sign in</button>
        </div>
    </div>
    <div id="cartModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white p-8 md:px-10 rounded-md relative w-[70%] lg:w-[50%]">
            <button id="closeCartModal" class="absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-700">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>

            <div id="cartReload" class="overflow-y-scroll" style="height: 400px;">
                <h2 class="font-bold text-2xl">Your cart</h2>
                <% if (Object.keys(cartItems).length > 0) { %>
                    <% Object.values(cartItems).forEach(function(cartItem) { %>
                        <div class="mb-4 flex lg:flex justify-between mt-3">
                            <div class="flex flex-col-reverse lg:flex-row lg:items-center w-[40%] lg:w-[40%]">
                                <div class="w-[100%]">                               
                                    <img class="h-[100%] w-[100%] sm:h-[100%] sm:w-[70%] md:w-[60%] lg:h-[90%] lg:w-[100%] rounded-md" src="<%= cartItem.image %>" alt="">                      
                                </div>
                                
                                <h2 class="w-[100%] mb-2 lg:mb-0 lg:ml-[10%] font-semibold text-base md:text-lg"><%= cartItem.name %></h2>
                            </div>
                            <div class="lg:w-[40%] w-[40%] flex flex-col justify-between my-8 sm:my-8 md:my-6 lg:my-0 lg:flex-row lg:items-center lg:justify-between lg:text-center lg:mx-5">
                                <span class="flex flex-row lg:flex-col">
                                    <p>size:</p>
                                    <p> <%= cartItem.size %></p>
                                </span>
                                <span class="flex flex-row">
                                    <button class="decrease-btn" data-shoe-id="<%= cartItem._id %>">-</button>
                                    <span class="quantity flex flex-row mx-2 md:mx-3 lg:mx-5" id="quantity_<%= cartItem._id %>"><%= cartItem.quantity %></span>
                                    <button class="increase-btn" data-shoe-id="<%= cartItem._id %>">+</button>
                                </span>
                                <span class="price" id="price_<%= cartItem._id %>">$<%= cartItem.price * cartItem.quantity %></span> 
                            </div>
                        </div>
                        <button class="remove-btn  text-red-700 font-semibold px-2 mb-3 md:mb-8 hover:underline" data-shoe-id="<%= cartItem._id %>" data-size="<%= cartItem.size %>">Remove</button>
                    <% }); %>
                    <button class="bottom-0 right-0 absolute text-center bg-green-500 hover:bg-green-600 py-2 md:py-3 font-semibold text-white text-sm md:text-lg rounded-md w-[100%]" id="checkoutButton">CHECKOUT</button>
                <% } else { %>
                <div class="flex justify-center">
                    <img class="bg-white" src="/public/images/cart.jpg" alt="cart image">
                </div>
                
                <p class="font-semibold text-center mb-10">Cart is empty</p>
                
                <a href="collections.html" class="rounded-md bg-gray-300 font-semibold text-sm px-3 py-2">
                    <button>Continue shopping</button>
                </a>
                <% } %>
            </div>

            <!-- <img class="bg-white" src="images/cart.jpg" alt=""> -->
        </div>
    </div>


<script>
    $(document).ready(function () {

        $(document).on('click', '#myAccountBtn', function() {
            console.log('my accountbtn');
            var submenu = document.getElementById('accountSubMenu');
            submenu.classList.toggle('hidden');
        });

        $('#toggleLoginPassword').click(function() { 
            const $passwordField = $('#loginPassword');
            const fieldType = $passwordField.attr('type');
            const newType = fieldType === 'password' ? 'text' : 'password';
            $passwordField.attr('type', newType);
        });
        $('#toggleSignupPassword').click(function() { 
            const $passwordField = $('#signupPassword');
            const fieldType = $passwordField.attr('type');
            const newType = fieldType === 'password' ? 'text' : 'password';
            $passwordField.attr('type', newType);
        });

        $(document).on('click', '#loginSubmit', function() {
            event.preventDefault(); // Prevent the form from submitting normally

        // Serialize the form data
            var formData = $('#loginForm').serialize();
                // Make an AJAX request to the login endpoint
            $.ajax({
                type: 'POST',
                url: '/auth/login',
                data: formData,
                dataType: 'json',
                success: function(response) {
                    if (response.error) {
                        $('#loginModal').load(location.href + ' #loginModalDiv');
                    } else {
                        if (response === 'admin'){
                            window.location.href = '/admin';
                            // console.log('response is admin');
                        } else{
                            if (response.source === 'checkout'){
                                window.location.href = '/checkout';
                                // console.log('checkout was included');
                            } else {
                                $('#loginModal').load(location.href + ' #loginModalDiv');
                                        // console.log('signup reloaded');

                                setTimeout(function() {
                                    $('#loginSuccessMessage').text('Login successful!').addClass('success-message bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded');
                                    // console.log('success msg inserted');
                                }, 1000);
                                
                                setTimeout(function() {
                                    // console.log('reload about to commence');
                                    window.location.reload();
                                }, 3000);
                            }
                        }
                        
                    }
                },
                error: function(xhr, status, error) {
                    // Handle errors 
                    console.error(xhr.responseText);
                }
            });
        });

        $(document).on('click', '#signupSubmit', function(event) {
            event.preventDefault(); // Prevent the form from submitting normally

        // Serialize the form data
            var formData = $('#signupForm').serialize();
            // console.log(formData);
                // Make an AJAX request to the login endpoint
            $.ajax({
                type: 'POST',
                url: '/auth/signup',
                data: formData,
                dataType: 'json',
                success: function(response) {
                    if (response.error) {
                        // const errorFromBack = response.error;
                        // console.log('error from back:', errorFromBack);
                        $('#signupModal').load(location.href + ' #signupModalDiv');
                    } else {
                        if (response.source === 'checkout'){
                                window.location.href = '/checkout';
                                // console.log('checkout was included');
                        } else {
                            $('#signupModal').load(location.href + ' #signupModalDiv');
                                // console.log('signup reloaded');

                            setTimeout(function() {
                                $('#signupSuccessMessage').text('Signup successful!').addClass('success-message bg-green-100 border border-green-400 text-green-700 px-4 py-2 rounded');
                                // console.log('success msg inserted');
                            }, 1000);
                            
                            setTimeout(function() {
                                // console.log('reload about to commence');
                                window.location.reload();
                            }, 3000);
                        }
                    }
                },
                error: function(xhr, status, error) {
                    // Handle errors 
                    console.error(xhr.responseText);
                }
            });
        });


        // Add click event listener to checkout button
        $(document).on('click', '#checkoutButton', function() {
            var isAuthenticated = '<%= isAuthenticated %>' === 'true';

            // Show the login modal if user is not authenticated
            if (!isAuthenticated) {
                $('#loginForm input[name="source"]').val('checkout');
                $('#signupForm input[name="source"]').val('checkout');

                $('#cartModal').addClass('hidden');
                $('#loginModal').removeClass('hidden');
            } else {
                // Proceed with checkout if user is authenticated
                window.location.href = '/checkout';
            }
        });
    });

</script>

    <script>
        const loginButton = document.getElementById('loginButton');
        const desktopLoginButton = document.getElementById('desktopLoginButton');
        const loginModal = document.getElementById('loginModal');
        const closeLoginModal = document.getElementById('closeLoginModal');
        const signupModalFromLoginModal = document.getElementById('signup-modal')
        const loginModalFromSignupModal = document.getElementById('login-modal')

        const toggleLoginModal = () => {
            loginModal.classList.toggle('hidden');
        }
        if (desktopLoginButton) {
            // console.log('desktop login');
            desktopLoginButton.addEventListener('click', toggleLoginModal)
        }
        if (loginButton) {
            loginButton.addEventListener('click', toggleLoginModal)
        }

        $(document).on('click', '#closeLoginModal', function() {
            // console.log('close loginmodal');
            loginModal.classList.add('hidden');
            $('#loginForm input[name="source"]').val('normal');
            $('#signupForm input[name="source"]').val('normal');
        });

        loginModal.addEventListener('click', (event) => {
            if (event.target === loginModal) {
                loginModal.classList.add('hidden');
            }
        });

        const signupButton = document.getElementById('signupButton');
        const desktopSignupButton = document.getElementById('desktopSignupButton');
        const signupModal = document.getElementById('signupModal');
        const closeSignupModal = document.getElementById('closeSignupModal');

        // desktopSignupButton.addEventListener('click', () => {
        //     signupModal.classList.toggle('hidden');
        // });
        const toggleSignupModal = () => {
            signupModal.classList.toggle('hidden');
        }
        if (signupButton) {
            signupButton.addEventListener('click', toggleSignupModal)
        }
        $(document).on('click', '#signup-modal', function() {
            // console.log('click from loginmodal');
            signupModal.classList.toggle('hidden');
            loginModal.classList.add('hidden');
        });
        // signupModalFromLoginModal.addEventListener('click', () => {
        //     signupModal.classList.toggle('hidden');
        //     loginModal.classList.add('hidden');
        // });
        loginModalFromSignupModal.addEventListener('click', () => {
            signupModal.classList.add('hidden');
            loginModal.classList.toggle('hidden');
        });

        // closeSignupModal.addEventListener('click', () => {
        //     signupModal.classList.add('hidden');
        // });
        $(document).on('click', '#closeSignupModal', function() {
            // console.log('close signupmodal');
            signupModal.classList.add('hidden');
            $('#loginForm input[name="source"]').val('normal');
        });

        signupModal.addEventListener('click', (event) => {
            if (event.target === signupModal) {
                signupModal.classList.add('hidden');
                $('#loginForm input[name="source"]').val('normal');
                $('#signupForm input[name="source"]').val('normal');
            }
        });

        const cart = document.getElementById('cart');
        const cartModal = document.getElementById('cartModal');
        const closeCartModal = document.getElementById('closeCartModal');

        cart.addEventListener('click', () => {
            cartModal.classList.toggle('hidden');
        });

        closeCartModal.addEventListener('click', () => {
            cartModal.classList.add('hidden');
        });

        cartModal.addEventListener('click', (event) => {
            if (event.target === cartModal) {
                cartModal.classList.add('hidden');
            }
        });
        
        $(document).ready(function(){
            const hamburgerButton = document.getElementById('hamburgerButton');
            const mobileMenu = document.getElementById('mobileMenu');
            const closeBtn = document.getElementById('closeBtn');

            hamburgerButton.addEventListener('click', () => {
                // alert("working")
                mobileMenu.classList.toggle("hidden");
            });
            closeBtn.addEventListener('click', () => {
                mobileMenu.classList.toggle("hidden");
            });

            $('.addToCartBtn').on('click', function () {
                const shoeId = $(this).data('shoe-id');
                console.log(shoeId);
                $('#sizeSelectionModal').removeClass('hidden');

                $('#sizeSelectionModal').data('shoe-id', shoeId);
            });

            // Event listener for "Add to Cart" button in the size selection modal
            $('#addToCartBtnInModal').on('click', function () {
                const shoeId = $('#sizeSelectionModal').data('shoe-id');
                console.log(shoeId);
                const selectedSize = $('#sizeDropdown').val(); // Retrieve selected size from the dropdown
                addToCart(shoeId, selectedSize);
            });

            // Function to add the item to the cart with the selected size
            function addToCart(shoeId, selectedSize) {
            $.ajax({
                url: '/add-to-cart',
                method: 'POST',
                data: { shoeId: shoeId, size: selectedSize },
                success: function (response) {
                    // console.log('added', selectedSize)
                showNotification('Item added to cart!');
                $('#cartReload').load(location.href + ' #cartReload');
                // const cartItems = getCartItemsFromCookies();
                        // console.log(cartItems);
                // You can update the cart display or perform other actions after successful addition
                // Close the modal
                $('#sizeSelectionModal').addClass('hidden');
                }
            });
            }
            function showNotification(message) {
                const notification = document.getElementById('notification');
                notification.textContent = message;
                notification.classList.remove('hidden');
                setTimeout(() => {
                    notification.classList.add('hidden');
                }, 3000);
            }
 
            document.getElementById('cartModal').addEventListener('click', function(event) {
                const target = event.target;
                console.log(target);

                // Check if the clicked element is an increase or decrease button
                if (target.classList.contains('increase-btn')) {
                    const shoeId = target.dataset.shoeId;
                    const spanQuantity = document.getElementById(`quantity_${shoeId}`);
                    const currentQuantity = parseInt(spanQuantity.textContent);

                    // Increase quantity
                    spanQuantity.textContent = currentQuantity + 1;
                    updateQuantity(shoeId, currentQuantity + 1);
                } else if (target.classList.contains('decrease-btn')) {
                    const shoeId = target.dataset.shoeId;
                    const spanQuantity = document.getElementById(`quantity_${shoeId}`);
                    const currentQuantity = parseInt(spanQuantity.textContent);

                    // Decrease quantity only if it's greater than 1
                    if (currentQuantity > 1) {
                        spanQuantity.textContent = currentQuantity - 1;

                        updateQuantity(shoeId, currentQuantity - 1);
                    }
                } 
                // $('#cartReload').load(location.href + ' #cartReload');
            });

            // document.getElementById('checkout').addEventListener('click', function(event) {
            //     const target = event.target;
            //     console.log(target);

            //     // Check if the clicked element is an increase or decrease button
            //     if (target.classList.contains('increase-btn')) {
            //         const shoeId = target.dataset.shoeId;
            //         const spanQuantity = document.getElementById(`quantity_${shoeId}`);
            //         const currentQuantity = parseInt(spanQuantity.textContent);

            //         // Increase quantity
            //         spanQuantity.textContent = currentQuantity + 1;
            //         updateQuantity(shoeId, currentQuantity + 1);
            //     } else if (target.classList.contains('decrease-btn')) {
            //         const shoeId = target.dataset.shoeId;
            //         const spanQuantity = document.getElementById(`quantity_${shoeId}`);
            //         const currentQuantity = parseInt(spanQuantity.textContent);

            //         // Decrease quantity only if it's greater than 1
            //         if (currentQuantity > 1) {
            //             spanQuantity.textContent = currentQuantity - 1;

            //             updateQuantity(shoeId, currentQuantity - 1);
            //         }
            //     } 
            //     // $('#checkout').load(location.href + ' #checkout');
            // });


            function updateQuantity(shoeId, newQuantity) {
    
                $.ajax({
                    url: '/update-quantity',
                    method: 'POST',
                    data: { shoeId: shoeId, quantity: newQuantity },
                    success: function(response) {
                        $('#cartReload').load(location.href + ' #cartReload');
                        $('#checkout').load(location.href + ' #checkout');
                        $('#grandPrice').load(location.href + ' #grandPrice');
                        
                        // Handle success if needed
                        // console.log(response);
                    },
                    error: function(error) {
                        // Handle error if needed
                        // console.error(error);
                    }
                });
            }

            // $(document).ready(function() {
            $('#cartReload').on('click', '.remove-btn', function() {
                const shoeId = $(this).data('shoe-id');
                const selectedSize = $(this).data('size'); 
                // console.log(shoeId)
                removeFromCart(shoeId, selectedSize);
            });
            $('#checkout').on('click', '.remove-btn', function() {
                const shoeId = $(this).data('shoe-id');
                const selectedSize = $(this).data('size'); 
                // console.log(shoeId)
                removeFromCart(shoeId, selectedSize);
            });
            function removeFromCart(shoeId, selectedSize){
                console.log("inside remove from cart function ajax side");
                $.ajax({
                    url: '/remove-from-cart',
                    method: 'POST',
                    data: { shoeId: shoeId, size: selectedSize },
                    success: function(response) {
                        // console.log(response);
                        $('#cartReload').load(location.href + ' #cartReload');
                        $('#checkout').load(location.href + ' #checkout');
                        // console.log("just reloaded");
                    },
                    error: function(error) {
                        console.error('Error removing item:', error);
                    }
                });
            }
        });
        // });
            
        // });
        const filter = document.getElementById("filter");
        const filterMenu = document.getElementById("filter-menu");

        const sortBy = document.getElementById("sort-by");
        const sortByMenu = document.getElementById("sort-menu");

        const toggleFilter = () => {
            filterMenu.classList.toggle("hidden");
        }
        const toggleSort = () => {
            sortByMenu.classList.toggle("hidden")
        }
        if (filterMenu) {
            filter.addEventListener('click', toggleFilter)
        }
        if (sortByMenu) {
            sortByMenu.addEventListener('click', toggleSort)
        }
        // filter.addEventListener('click', () => {
        //     // alert("working");
        //     filterMenu.classList.toggle("hidden");
        // });
        // sortBy.addEventListener('click', () => {
        //     // alert("working");
        //     sortByMenu.classList.toggle("hidden");
        // });
    </script>